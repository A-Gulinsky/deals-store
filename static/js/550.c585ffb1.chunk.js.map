{"version":3,"file":"static/js/550.c585ffb1.chunk.js","mappings":"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","sources":["components/ContactUs/ContactUs.styled.jsx","components/ContactUs/Form/ContactForm.styled.jsx","components/ContactUs/Form/components/CommunicationList/Viber/FormViber.styled.jsx","components/ContactUs/Form/components/errorAnim.js","components/ContactUs/Form/components/CommunicationList/Viber/FormViber.jsx","components/ContactUs/Form/components/CommunicationList/WhatsApp/FormWhatsApp.styled.jsx","components/ContactUs/Form/components/CommunicationList/WhatsApp/FormWhatsApp.jsx","components/ContactUs/Form/components/CommunicationList/Telegram/FormTelegram.styled.jsx","components/ContactUs/Form/components/CommunicationList/Telegram/FormTelegram.jsx","components/ContactUs/Form/components/CommunicationList/Phone/FormPhone.styled.jsx","components/ContactUs/Form/components/CommunicationList/Phone/FormPhone.jsx","components/ContactUs/Form/components/CommunicationBtnList/CommunicationBtnList.styled.jsx","components/ContactUs/Form/components/CommunicationBtnList/CommunicationBtnList.jsx","components/ContactUs/Form/components/BasicInput/BasicInput.styled.jsx","components/ContactUs/Form/components/BasicInput/InputField.js","components/ContactUs/Form/components/BasicInput/BasicInput.jsx","components/ContactUs/Form/components/TextArea/TextArea.styled.jsx","components/ContactUs/Form/components/TextArea/TextArea.jsx","components/ContactUs/Form/ContactForm.jsx","components/ContactUs/ContactUs.jsx","pages/ContactUsPage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ContactUsContainer = styled.div`\r\n  max-width: 1170px;\r\n  padding: 20px 15px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  width: 300px;\r\n  padding: 25px;\r\n\r\n  background-color: #000000dc;\r\n  border: 1px solid #131212;\r\n  border-radius: 4px;\r\n\r\n  @media screen and (max-width: 380px) {\r\n    width: 280px;\r\n    padding: 25px 10px;\r\n  }\r\n`\r\n\r\nexport const P = styled.p`\r\n  margin-bottom: 5px;\r\n\r\n  font-weight: 600;\r\n  text-align: center;\r\n  color: #064ec1;\r\n`\r\n\r\nexport const Button = styled.input`\r\n  padding: 10px 40px;\r\n\r\n  color: #ffffffdc;\r\n\r\n  background-color: transparent;\r\n  border: 1px solid #ecebebe5;\r\n  border-radius: 4px;\r\n\r\n  transition: 150ms ease-in-out;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.06);\r\n  }\r\n`","import styled from \"@emotion/styled\"\r\n\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport const Label = styled.label`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding-left: 10px;\r\n\r\n  border: 1px solid #615e5e;\r\n  border-radius: 4px;\r\n\r\n  transition: 200ms;\r\n\r\n  &:hover ,\r\n  &:focus{\r\n    box-shadow: 0px 0px 2px 2px #d5d2d24a;\r\n  }\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 8px 8px;\r\n\r\n  font-size: 16px;\r\n  color: #ffffffc6;\r\n\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n\r\n  outline: transparent;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n`\r\n\r\nexport const P = styled(motion.p)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  left: 0;\r\n\r\n  margin-bottom: 5px;\r\n\r\n  font-family: 'Roboto',sans-serif;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  color: #c10606;\r\n  letter-spacing: 0.1em;\r\n`\r\n","\r\nexport const errorAnim = {\r\n  hidden: {\r\n    opacity: 0,\r\n    y: -10\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0\r\n  }\r\n}","\r\n// svg\r\nimport { FaViber } from \"react-icons/fa6\"\r\n\r\n// emotion\r\nimport { Input, Label, P } from \"./FormViber.styled\"\r\n\r\n// anim\r\nimport { errorAnim } from \"../../errorAnim\"\r\n\r\nexport const FormViber = ({register, errors}) => {\r\n\r\n  return (\r\n    <Label>\r\n\r\n      <FaViber style={{ width: 30, height: 30, paddingRight: '10px', fill: '#ffffffd0',filter: 'drop-shadow(0px 0px 8px #7500ebd2)' }} />\r\n\r\n      <Input\r\n        autoComplete=\"nope\"\r\n        {...register(\"viber\", {\r\n          required: 'Required field',\r\n          pattern: {\r\n            value: /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n            message: `Incorrect format`\r\n          },\r\n          maxLength: {\r\n            value: 12,\r\n            message: 'Max 12 length'\r\n          }\r\n        })}\r\n        style={{ borderColor: errors.phone ? 'red' : 'initial' }}\r\n        placeholder=\"Viber\"\r\n        type=\"number\"\r\n      />\r\n      {errors.viber && <P variants={errorAnim} initial='hidden' animate='visible' transition={{duration: 0.2}}>{errors.viber.message}</P>}\r\n    </Label>\r\n  )\r\n}","import styled from \"@emotion/styled\"\r\n\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport const Label = styled.label`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding-left: 10px;\r\n\r\n  border: 1px solid #615e5e;\r\n  border-radius: 4px;\r\n\r\n  transition: 200ms;\r\n  z-index: 10;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0px 0px 2px 2px #d5d2d24a;\r\n  }\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 8px 8px;\r\n\r\n  font-size: 16px;\r\n  color: #ffffffc6;\r\n\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n\r\n  outline: transparent;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n`\r\n\r\nexport const P = styled(motion.p)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  left: 0;\r\n  margin-bottom: 5px;\r\n\r\n  font-family: 'Roboto',sans-serif;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  color: #c10606;\r\n  letter-spacing: 0.1em;\r\n  \r\n  z-index: 5;\r\n`\r\n","\r\n// svg\r\nimport { AiOutlineWhatsApp } from 'react-icons/ai'\r\n\r\n// emotion\r\nimport { Input, Label, P } from './FormWhatsApp.styled'\r\n\r\n// anim\r\nimport { errorAnim } from '../../errorAnim'\r\n\r\nexport const WhatsApp = ({register, errors}) => {\r\n\r\n  return (\r\n    <Label>\r\n\r\n      <AiOutlineWhatsApp style={{ width: 30, height: 30, paddingRight: '10px', fill: '#ffffffd0', filter: 'drop-shadow(0px 0px 8px #04e10bd2)' }} />\r\n\r\n      <Input\r\n        autoComplete=\"nope\"\r\n        {...register(\"whatsapp\", {\r\n          required: 'Required field',\r\n          pattern: {\r\n            value: /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n            message: `Incorrect format`\r\n          },\r\n          maxLength: {\r\n            value: 12,\r\n            message: 'Max 12 length'\r\n          }\r\n        })}\r\n        style={{ borderColor: errors.phone ? 'red' : 'initial' }}\r\n        placeholder=\"WhatsApp\"\r\n        type=\"number\"\r\n      />\r\n      {errors.whatsapp && <P variants={errorAnim} initial='hidden' animate='visible' transition={{duration: 0.2}}>{errors.whatsapp.message}</P>}\r\n    </Label>\r\n  )\r\n}","import styled from \"@emotion/styled\"\r\n\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport const Label = styled.label`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding-left: 10px;\r\n\r\n  border: 1px solid #615e5e;\r\n  border-radius: 4px;\r\n\r\n  transition: 200ms;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0px 0px 2px 2px #d5d2d24a;\r\n  }\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 8px 8px;\r\n\r\n  font-size: 16px;\r\n  color: #ffffffc6;\r\n\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n\r\n  outline: transparent;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n`\r\n\r\nexport const P = styled(motion.p)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  left: 0;\r\n\r\n  margin-bottom: 5px;\r\n\r\n  font-family: 'Roboto',sans-serif;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  color: #c10606;\r\n  letter-spacing: 0.1em;\r\n`\r\n","\r\n// emotion\r\nimport { Input, Label, P } from \"./FormTelegram.styled\"\r\n\r\n// svg\r\nimport { PiTelegramLogo} from 'react-icons/pi'\r\n\r\n// anim\r\nimport { errorAnim } from \"../../errorAnim\"\r\n\r\nexport const Telegram = ({register, errors}) => {\r\n\r\n  return (\r\n    <Label>\r\n\r\n      <PiTelegramLogo style={{ width: 30, height: 30, paddingRight: '10px', fill: '#ffffffd0',filter: 'drop-shadow(0px 0px 8px #036bf3d2)' }} />\r\n\r\n      <Input\r\n        autoComplete=\"nope\"\r\n        {...register(\"telegram\", {\r\n          required: 'Required field',\r\n          maxLength: {\r\n            value: 15,\r\n            message: 'Max 15 length'\r\n          }\r\n        })}\r\n        style={{ borderColor: errors.phone ? 'red' : 'initial' }}\r\n        placeholder=\"Telegram\"\r\n      />\r\n      {errors.telegram && <P variants={errorAnim} initial='hidden' animate='visible' transition={{duration: 0.2}}>{errors.telegram.message}</P>}\r\n    </Label>\r\n  )\r\n}","import styled from \"@emotion/styled\"\r\n\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport const Label = styled.label`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding-left: 10px;\r\n\r\n  border: 1px solid #615e5e;\r\n  border-radius: 4px;\r\n\r\n  transition: 200ms;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0px 0px 2px 2px #d5d2d24a;\r\n  }\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 8px 8px;\r\n\r\n  font-size: 16px;\r\n  color: #ffffffc6;\r\n\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n\r\n  outline: transparent;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n`\r\n\r\nexport const P = styled(motion.p)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  left: 0;\r\n\r\n  margin-bottom: 5px;\r\n\r\n  font-family: 'Roboto',sans-serif;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  color: #c10606;\r\n  letter-spacing: 0.1em;\r\n`\r\n","\r\n// emotion\r\nimport { Input, Label, P } from \"./FormPhone.styled\"\r\n\r\n// svg\r\nimport { MdPhoneIphone } from 'react-icons/md'\r\n\r\n// anim\r\nimport { errorAnim } from \"../../errorAnim\"\r\n\r\nexport const Phone = ({register, errors }) => {\r\n\r\n  return (\r\n    <Label>\r\n\r\n      <MdPhoneIphone  style={{ width: 30, height: 30, paddingRight: '10px', fill: '#ffffffb5',filter: 'drop-shadow(0px 0px 4px #77d5f79f)' }}/>\r\n\r\n      <Input\r\n        autoComplete=\"off\"\r\n        {...register(\"phone\", {\r\n          required: 'Required field',\r\n          pattern: {\r\n            value: /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\r\n            message: `Incorrect format`\r\n          },\r\n          maxLength: {\r\n            value: 12,\r\n            message: 'Max 12 length'\r\n          }\r\n        })}\r\n        style={{ borderColor: errors.phone ? 'red' : 'initial' }}\r\n        placeholder=\"Phone\"\r\n        type=\"number\"\r\n      />\r\n      {errors.phone && <P variants={errorAnim} initial='hidden' animate='visible' transition={{duration: 0.2}}>{errors.phone.message}</P>}\r\n    </Label>\r\n  )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const CommunicationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 12px;\r\n`\r\n\r\nexport const InputTitle = styled.b`\r\n  font-family: 'Raleway',sans-serif;\r\n  font-weight: 400;\r\n  letter-spacing: 0.1em;\r\n  font-size: 16px;\r\n  color: #ffffffc0;\r\n`\r\n\r\nexport const Ul = styled.ul`\r\n  display: flex;\r\n  gap: 20px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  margin: 0;\r\n  padding: 10px;\r\n\r\n  background-color: transparent;\r\n  border: 1px solid transparent;\r\n  border: ${props => props.active && '1px solid #ffffffc7'};\r\n  border-radius: 100%;\r\n\r\n  transition: 200ms;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.07);\r\n  }\r\n`\r\n\r\n// svg style\r\nexport const btnStyle = {\r\n  width: 35,\r\n  height: 35,\r\n  fill: '#ffffffd0'\r\n}","\r\n// emotion\r\nimport { btnStyle, Button, CommunicationContainer, InputTitle, Ul } from \"./CommunicationBtnList.styled\"\r\n\r\n// react icons\r\nimport { MdPhoneIphone } from 'react-icons/md'\r\nimport { AiOutlineWhatsApp } from 'react-icons/ai'\r\nimport { FaViber } from 'react-icons/fa'\r\nimport { PiTelegramLogo } from 'react-icons/pi'\r\n\r\n// props\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const CommunicationBtnList = ({activeChoice,handleChoiceClick}) => {\r\n  \r\n  return (\r\n    <CommunicationContainer>\r\n      <InputTitle>Communication method</InputTitle>\r\n      <Ul>\r\n\r\n        <li>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => handleChoiceClick('phone')}\r\n            active={activeChoice === 'phone' && true}\r\n            style={{filter: 'drop-shadow(0px 0px 4px #77d5f79f)'}}\r\n          >\r\n            <MdPhoneIphone style={btnStyle}/>\r\n          </Button>\r\n        </li>\r\n\r\n        <li>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => handleChoiceClick('telegram')}\r\n            active={activeChoice === 'telegram' && true}\r\n            style={{filter: 'drop-shadow(0px 0px 8px #037bf3f2)'}}\r\n          >\r\n            <PiTelegramLogo style={btnStyle} />\r\n          </Button>\r\n        </li>\r\n\r\n        <li>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => handleChoiceClick('whatsapp')}\r\n            active={activeChoice === 'whatsapp' && true}\r\n            style={{filter: 'drop-shadow(0px 0px 8px #04e10bd2)'}}\r\n          >\r\n            <AiOutlineWhatsApp style={btnStyle} />\r\n          </Button>\r\n        </li>\r\n\r\n        <li>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => handleChoiceClick('viber')}\r\n            active={activeChoice === 'viber' && true}\r\n            style={{filter: 'drop-shadow(0px 0px 8px #7500ebd2)'}}\r\n          >\r\n            <FaViber style={btnStyle} />\r\n          </Button>\r\n        </li>\r\n        \r\n      </Ul>\r\n    </CommunicationContainer>\r\n  )\r\n}\r\n\r\nCommunicationBtnList.propTypes = {\r\n  activeChoice: PropTypes.string,\r\n  handleChoiceClick: PropTypes.func,\r\n};","import styled from \"@emotion/styled\"\r\n\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport const BasicInputContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n`\r\n\r\nexport const InputTitle = styled.b`\r\n  font-family: 'Raleway',sans-serif;\r\n  font-weight: 400;\r\n  letter-spacing: 0.1em;\r\n  font-size: 20px;\r\n\r\n  color: #ffffffc0;\r\n`\r\n\r\nexport const Label = styled.label`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding-left: 10px;\r\n\r\n  border: 1px solid #615e5e;\r\n  border-radius: 4px;\r\n\r\n  transition: 200ms;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0px 0px 2px 2px #d5d2d24a;\r\n  }\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 8px 8px;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  font-size: 16px;\r\n  color: #ffffffc5;\r\n\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  border: none;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n\r\n  outline: transparent;\r\n`\r\n\r\nexport const P = styled(motion.p)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  left: 0;\r\n\r\n  margin-bottom: 5px;\r\n\r\n  font-family: 'Roboto',sans-serif;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  letter-spacing: 0.1em;\r\n  text-align: center;\r\n  color: #c10606;\r\n`\r\n\r\n// svg\r\n\r\nexport const svgStyle = {\r\n  width: 30,\r\n  height: 30,\r\n  paddingRight: '10px',\r\n  fill: '#ffffffcf',\r\n  filter: 'drop-shadow(0px 0px 5px #2f8aeb)'\r\n}\r\n","\r\nexport const NameOptions = {\r\n  required: `Required field`,\r\n  pattern: {\r\n    value: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n    message: `Incorrect format`\r\n  },\r\n  maxLength: {\r\n    value: 15,\r\n    message: 'Max 15 length'\r\n  },\r\n}\r\n\r\nexport const EmailOptions = {\r\n  required: 'Required field',\r\n  pattern: {\r\n    message: `Incorrect format`\r\n  },\r\n}","\r\n// emotion\r\nimport { svgStyle,BasicInputContainer, Input, InputTitle, Label, P } from \"./BasicInput.styled\"\r\n\r\n// form input settings\r\nimport { NameOptions, EmailOptions } from \"./InputField\"\r\n\r\n// react icons\r\nimport { BsPeople } from 'react-icons/bs'\r\nimport { AiOutlineMail } from 'react-icons/ai'\r\n\r\n// anim\r\nimport { errorAnim } from \"../errorAnim\"\r\n\r\nexport const BasicInput = ({register , errors}) => {\r\n\r\n  return (\r\n    <> \r\n      \r\n      <BasicInputContainer>\r\n\r\n        <InputTitle>Name</InputTitle>\r\n        <Label>\r\n        \r\n          <BsPeople style={svgStyle} />\r\n\r\n          <Input\r\n            autoComplete=\"nope\"\r\n            {...register(\"name\", NameOptions)}\r\n            placeholder=\"Name\"\r\n          />\r\n          {errors.name && <P variants={errorAnim} initial='hidden' animate='visible' transition={{duration: 0.2}}>{errors.name.message}</P>}\r\n        </Label>\r\n      </BasicInputContainer>\r\n      \r\n      <BasicInputContainer>\r\n        <InputTitle>Email</InputTitle>\r\n        <Label>\r\n\r\n          <AiOutlineMail style={svgStyle} />\r\n\r\n          <Input\r\n            autoComplete=\"off\"\r\n            {...register(\"email\", EmailOptions)}\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n          />\r\n          {errors.email && <P variants={errorAnim} initial='hidden' animate='visible' transition={{duration: 0.2}}>{errors.email.message}</P>}\r\n        </Label>\r\n        \r\n      </BasicInputContainer>\r\n    </>\r\n  )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const TextAreaContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  width: 100%;\r\n`\r\n\r\nexport const TextAreaTitle = styled.b`\r\n  font-family: 'Raleway',sans-serif;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  color: #ffffffc0;\r\n  letter-spacing: 0.1em;\r\n`\r\n\r\nexport const TextAreaStyled = styled.textarea`\r\n  width: 90%;\r\n  height: 80px;\r\n  padding: 10px;\r\n\r\n  color: #ffffffcc;\r\n\r\n  background-color: transparent;\r\n  border-radius: 2px;\r\n\r\n  resize: none;\r\n  outline: none;\r\n`","\r\n// emotion\r\nimport { TextAreaContainer, TextAreaStyled, TextAreaTitle } from \"./TextArea.styled\"\r\n\r\nexport const TextArea = ({register , errors}) => {\r\n  \r\n  return (\r\n    <TextAreaContainer>\r\n      <TextAreaTitle>Your Message</TextAreaTitle>\r\n      <TextAreaStyled\r\n        {...register(\"message\")}\r\n        placeholder=\"Your message\"\r\n      />\r\n    </TextAreaContainer>\r\n  )\r\n}","import { useState } from \"react\"\r\n\r\n// react hook form/emotion\r\nimport { useForm } from \"react-hook-form\"\r\nimport { Form, Button } from './ContactForm.styled' \r\n\r\n// inputSettings - components\r\nimport { FormViber } from \"./components/CommunicationList/Viber/FormViber\"\r\nimport { WhatsApp } from \"./components/CommunicationList/WhatsApp/FormWhatsApp\"\r\nimport { Telegram } from \"./components/CommunicationList/Telegram/FormTelegram\"\r\nimport { Phone } from \"./components/CommunicationList/Phone/FormPhone\"\r\nimport { CommunicationBtnList } from \"./components/CommunicationBtnList/CommunicationBtnList\"\r\nimport { BasicInput } from \"./components/BasicInput/BasicInput\"\r\nimport { TextArea } from \"./components/TextArea/TextArea\"\r\n\r\nexport const ContactForm = () => {\r\n  \r\n  const [communicationChoice, setCommunicationChoice] = useState('phone')\r\n\r\n  const handleChoiceClick = (type) => {\r\n    setCommunicationChoice(type)\r\n  }\r\n\r\n  // react hook form\r\n  const { register, handleSubmit, formState: { errors },reset } = useForm({\r\n    defaultValues: {\r\n      name: '',\r\n      email: ''\r\n    }\r\n  })\r\n\r\n  const onSubmit = () => {\r\n    \r\n    console.log(`Thank you, wait for the answer!`)\r\n    reset()\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      \r\n      <BasicInput register={register} errors={errors} />\r\n\r\n      <CommunicationBtnList activeChoice={communicationChoice} handleChoiceClick={handleChoiceClick} />\r\n      \r\n      {communicationChoice === 'phone' && <Phone register={register} errors={errors} />}\r\n      {communicationChoice === 'telegram' && <Telegram register={register} errors={errors} />}\r\n      {communicationChoice === 'whatsapp' && <WhatsApp register={register} errors={errors} />}\r\n      {communicationChoice === 'viber' && <FormViber register={register} errors={errors} />}\r\n      \r\n      <TextArea register={register} errors={errors} />\r\n\r\n      <Button type=\"submit\" value=\"Send\" />\r\n      \r\n    </Form>\r\n  )\r\n}","import { ContactUsContainer } from \"./ContactUs.styled\"\r\nimport { ContactForm } from \"./Form/ContactForm\"\r\n\r\nexport const ContactUs = () => {\r\n\r\n  return (\r\n    <ContactUsContainer>\r\n      <h2>Contact Us</h2>\r\n      <ContactForm />\r\n    </ContactUsContainer>\r\n  )\r\n}","import { ContactUs } from \"../components/ContactUs/ContactUs\"\r\n\r\nconst ContactUsPage = () => {\r\n  return (\r\n    <ContactUs />\r\n  )\r\n}\r\n\r\nexport default ContactUsPage"],"names":["ContactUsContainer","styled","div","_templateObject","_taggedTemplateLiteral","Form","form","Button","p","_templateObject2","input","_templateObject3","Label","label","Input","P","motion","errorAnim","hidden","opacity","y","visible","FormViber","_ref","register","errors","_jsxs","children","_jsx","FaViber","style","width","height","paddingRight","fill","filter","_objectSpread","autoComplete","required","pattern","value","message","maxLength","borderColor","phone","placeholder","type","viber","variants","initial","animate","transition","duration","WhatsApp","AiOutlineWhatsApp","whatsapp","Telegram","PiTelegramLogo","telegram","Phone","MdPhoneIphone","CommunicationContainer","InputTitle","b","Ul","ul","button","_templateObject4","props","active","btnStyle","CommunicationBtnList","activeChoice","handleChoiceClick","onClick","BasicInputContainer","_templateObject5","svgStyle","NameOptions","EmailOptions","BasicInput","_Fragment","BsPeople","name","AiOutlineMail","email","TextAreaContainer","TextAreaTitle","TextAreaStyled","textarea","TextArea","ContactForm","_useState","useState","_useState2","_slicedToArray","communicationChoice","setCommunicationChoice","_useForm","useForm","defaultValues","handleSubmit","formState","reset","onSubmit","console","log","ContactUs"],"sourceRoot":""}